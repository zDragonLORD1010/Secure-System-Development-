==14607== Memcheck, a memory error detector
==14607== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==14607== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info
==14607== Command: ./hash
==14607== 
HashInit() Successful
HashAdd(map, 'test_key')
==14607== Invalid read of size 1
==14607==    at 0x109203: HashIndex (hash.c:11)
==14607==    by 0x109250: HashAdd (hash.c:23)
==14607==    by 0x1094BF: main (hash.c:74)
==14607==  Address 0x1fff001000 is not stack'd, malloc'd or (recently) free'd
==14607== 
==14607== 
==14607== Process terminating with default action of signal 11 (SIGSEGV)
==14607==  Access not within mapped region at address 0x1FFF001000
==14607==    at 0x109203: HashIndex (hash.c:11)
==14607==    by 0x109250: HashAdd (hash.c:23)
==14607==    by 0x1094BF: main (hash.c:74)
==14607==  If you believe this happened as a result of a stack
==14607==  overflow in your program's main thread (unlikely but
==14607==  possible), you can try to increase the size of the
==14607==  main thread stack using the --main-stacksize= flag.
==14607==  The main thread stack size used in this run was 8388608.
==14607== 
==14607== HEAP SUMMARY:
==14607==     in use at exit: 2,048 bytes in 2 blocks
==14607==   total heap usage: 2 allocs, 0 frees, 2,048 bytes allocated
==14607== 
==14607== LEAK SUMMARY:
==14607==    definitely lost: 0 bytes in 0 blocks
==14607==    indirectly lost: 0 bytes in 0 blocks
==14607==      possibly lost: 0 bytes in 0 blocks
==14607==    still reachable: 2,048 bytes in 2 blocks
==14607==         suppressed: 0 bytes in 0 blocks
==14607== Reachable blocks (those to which a pointer was found) are not shown.
==14607== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==14607== 
==14607== For lists of detected and suppressed errors, rerun with: -s
==14607== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Segmentation fault (core dumped)

